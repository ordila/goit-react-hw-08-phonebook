{"version":3,"file":"static/js/28.04cabfec.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/pages/Contacts/Contacts.module.css?4151","components/pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst withAuthRedirect = Component => {\n  const PrivateComponent = props => {\n    const userData = useSelector(state => state.user.userData);\n    console.log('userData', userData);\n\n    return userData ? <Component {...props} /> : <Navigate to={'/login'} />;\n  };\n  return PrivateComponent;\n};\nexport default withAuthRedirect;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_contacts\":\"ContactForm_form_contacts__e25ZD\",\"input\":\"ContactForm_input__Bl93P\"};","import React from 'react';\nimport css from './ContactForm.module.css';\nimport { Button } from '@mui/material';\nconst ContactForm = ({ onAdd, onCheckUnique }) => {\n  const formatPhoneNumber = event => {\n    const input = event.target;\n    let value = input.value.replace(/\\D/g, ''); // Remove non-digit characters\n\n    if (value.length > 6) {\n      value = `${value.slice(0, 3)}-${value.slice(3, 5)}-${value.slice(5, 7)}`;\n    }\n\n    input.value = value;\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.name.value;\n    const number = event.currentTarget.elements.phone.value;\n\n    if (!name || !number) {\n      alert('Заповніть усі поля');\n      return false;\n    }\n\n    if (onCheckUnique(name)) {\n      onAdd({ name, number });\n    } else {\n      alert('Контакт вже існує');\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <form className={css.form_contacts} onSubmit={handleFormSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          className={css.input}\n          type=\"text\"\n          required\n          name=\"name\"\n        />\n        <label htmlFor=\"phone\">Phone</label>\n\n        <input\n          className={css.input}\n          type=\"tel\"\n          required\n          name=\"phone\"\n          onChange={formatPhoneNumber}\n        />\n        <Button\n          variant=\"outlined\"\n          className={css.button_logOut}\n          sx={{ color: '#fff' }}\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\"};","import { Button } from '@mui/material';\nimport css from './ContactList.module.css';\nconst ContactListItem = ({ name, number, onRemove, id }) => {\n  const handleRemoveClick = () => {\n    onRemove(id);\n  };\n  return (\n    <li className={css.contacts}>\n      {name} : {number}{' '}\n      <Button variant=\"outlined\" onClick={handleRemoveClick}>\n        Delete\n      </Button>\n    </li>\n  );\n};\nconst ContactList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem key={contact.id} {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFilter\":\"Filter_inputFilter__8QMOp\",\"subTitle\":\"Filter_subTitle__ntO3U\"};","import css from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <>\n      <h2 className={`${css.subTitle} ${css.filter}`}>Filter</h2>\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n        placeholder=\"Please enter a name to search\"\n      ></input>\n    </>\n  );\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"Contacts_subTitle__SSb6n\",\"form_wrapper\":\"Contacts_form_wrapper__2GOBZ\",\"filter\":\"Contacts_filter__0bPEj\",\"in_wrapper\":\"Contacts_in_wrapper__FIeTp\"};","import withAuthRedirect from 'HOC/withAuthRedirect';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport css from './Contacts.module.css';\nimport {\n  selectContact,\n  selectFilter,\n  selectIsLoading,\n  setFilter,\n} from 'components/redux/contactsReducer';\nimport {\n  deleteContactThunk,\n  postContactsThunk,\n  requestContactsThunk,\n} from 'components/redux/thunk';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContact);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const getVisibleContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  const handleFilterChange = filter => dispatch(setFilter(filter));\n\n  const handleCheckUniqueContact = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist');\n    return !isExistContact;\n  };\n\n  const handleRempveContact = id => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  const handleAddContact = newContact =>\n    dispatch(postContactsThunk(newContact));\n\n  useEffect(() => {\n    dispatch(requestContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <div className={css.form_wrapper}>\n      {!isLoading ? (\n        <div className={css.in_wrapper}>\n          <h2 className={css.subTitle}>CONTACT BOOK</h2>\n          <ContactForm\n            onAdd={handleAddContact}\n            onCheckUnique={handleCheckUniqueContact}\n          />\n\n          <Filter filter={filter} onChange={handleFilterChange}></Filter>\n          <h2 className={css.subTitle}>Contacts</h2>\n          <ContactList\n            contacts={visibleContacts}\n            onRemove={handleRempveContact}\n          />\n        </div>\n      ) : (\n        <h1>DATA IS LOADING FROM SERVER...</h1>\n      )}\n    </div>\n  );\n};\n\nexport default withAuthRedirect(Contacts);\n"],"names":["Component","props","userData","useSelector","state","user","console","log","to","onAdd","onCheckUnique","className","css","onSubmit","event","preventDefault","name","currentTarget","elements","value","number","phone","alert","htmlFor","id","type","required","onChange","input","target","replace","length","slice","Button","variant","sx","color","ContactListItem","onRemove","onClick","contacts","map","contact","filter","placeholder","withAuthRedirect","selectContact","selectFilter","dispatch","useDispatch","isLoading","selectIsLoading","visibleContacts","toLowerCase","includes","useEffect","requestContactsThunk","newContact","postContactsThunk","isExistContact","find","setFilter","deleteContactThunk"],"sourceRoot":""}